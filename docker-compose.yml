version: "2.1"
services:
    mongo:
        image: mongo:7
        container_name: "mongo"
        ports:
            - "27017:27017"
        networks:
            - app-network
    rabbitmq:
        image: rabbitmq:management
        container_name: "rabbitmq"
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - ./.docker/rabbitmq/log/:/var/log/rabbitmq
        networks:
            - app-network
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 10s
            timeout: 10s
            retries: 5
    user-service:
        build:
            context: ./user
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        depends_on:
            rabbitmq:
                condition: service_healthy
            mongo:
                condition: service_started
        healthcheck:
            test: curl http://localhost:8080/health-check/
            interval: 5s
            timeout: 5s
            retries: 3
        restart: on-failure
        links:
            - rabbitmq
            - mongo
        networks:
            - app-network
    notification-service:
        build:
            context: ./notification
            dockerfile: Dockerfile
        ports:
            - "8081:8081"
        depends_on:
            rabbitmq:
                condition: service_healthy
        restart: on-failure
        links:
            - rabbitmq
        healthcheck:
            test: curl http://localhost:8081/health-check/
            interval: 5s
            timeout: 5s
            retries: 3
        networks:
            - app-network
networks:
    app-network:
        driver: bridge